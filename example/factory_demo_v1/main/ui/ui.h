// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.2
// LVGL version: 8.3.11
// Project name: SquareLine_Project

#ifndef _SQUARELINE_PROJECT_UI_H
#define _SQUARELINE_PROJECT_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#include "lvgl.h"
#include "esp_log.h"

#include "ui_helpers.h"
#include "ui_events.h"

#define LV_EVENT_RENEW                  (_LV_EVENT_LAST + 1)
#define LV_EVENT_SCREEN_NEXT            (_LV_EVENT_LAST + 2)
#define LV_EVENT_SCREEN_PRIVIOUS        (_LV_EVENT_LAST + 3)
#define LV_EVENT_SET_FRAME              (_LV_EVENT_LAST + 4)
#define LV_EVENT_SCREEN_FACE            (_LV_EVENT_LAST + 5)

#define LV_EVENT_FACE_LOOK              (_LV_EVENT_LAST + 6)
#define LV_EVENT_FACE_ASK               (_LV_EVENT_LAST + 7)
#define LV_EVENT_FACE_THINK             (_LV_EVENT_LAST + 8)
#define LV_EVENT_FACE_SPEAK             (_LV_EVENT_LAST + 9)


#define LOTTIE_SIZE_HOR_MIN             (90)
#define LOTTIE_SIZE_VER_MIN             (90)

void muyushow_Animation(lv_obj_t *TargetObject, int delay);
void blink_Animation(lv_obj_t *TargetObject, int delay);
void falldown_Animation(lv_obj_t *TargetObject, int delay);
void weather_Animation(lv_obj_t *TargetObject, int delay);
void riseup_Animation(lv_obj_t *TargetObject, int delay);
void opaon_Animation(lv_obj_t *TargetObject, int delay);
void gonde_txt_Animation(lv_obj_t *TargetObject, int delay);

// SCREEN: ui_home
void ui_home_screen_init(void);
void ui_event_home(lv_event_t *e);
extern lv_obj_t *ui_home;
extern lv_obj_t *ui_Panel1;
extern lv_obj_t *ui_hour;
extern lv_obj_t *ui_min;
extern lv_obj_t *ui_date;
extern lv_obj_t *ui_weekday;
extern lv_obj_t *ui_temp;
extern lv_obj_t *ui_weather;
extern lv_obj_t *ui_colon;
extern lv_obj_t *ui_weathershow;

// SCREEN: ui_muyuplay
void ui_muyuplay_screen_init(void);
void ui_event_muyuplay(lv_event_t *e);
extern lv_obj_t *ui_muyuplay;
extern lv_obj_t *ui_Panel3;
extern lv_obj_t *ui_muyu;
extern lv_obj_t *ui_gongdetxt;
extern lv_obj_t *ui_gongde_sum;
extern int gongde_sum;

// SCREEN: ui_dice
void ui_dice_screen_init(void);
void ui_event_dice(lv_event_t *e);
extern lv_obj_t *ui_dice;
extern lv_obj_t *ui_Panel4;
extern lv_obj_t *ui_shaizibut;
extern lv_obj_t *ui_shaizitxt;
extern lv_obj_t *ui_dice_canvas;

// SCREEN: ui_title
void ui_title_screen_init(void);
extern  lv_obj_t *ui_title;
extern  lv_obj_t *title_panel;
extern  lv_obj_t *title_wifistate;
extern  lv_obj_t *title_powerstate;
extern  lv_obj_t *title_batterybor;
extern  lv_obj_t *title_timestate;
extern  lv_obj_t *title_batterytxt;

// SCREEN: ui_fish
void ui_fish_screen_init(void);
extern lv_obj_t *ui_fish;
extern lv_obj_t *ui_Panel_fish;
extern lv_obj_t *ui_fish_canvas;
void ui_event_fish(lv_event_t *e);

// SCREEN: ui_face
void ui_face_screen_init(void);
extern lv_obj_t *ui_face;
extern lv_obj_t *ui_Panel_face;
extern lv_obj_t *ui_face_canvas;
void ui_event_face(lv_event_t *e);

// SCREEN:ui_game_2048
void ui_game_screen_init(void);
extern lv_obj_t *ui_game;
extern lv_obj_t *ui_gamepanel;
extern lv_obj_t *ui_2048;
extern lv_obj_t *ui_score;
void ui_event_game(lv_event_t *e);
void ui_event_game_score(lv_event_t *e);

// SCREEN:ui_net_connect
void ui_net_screen_init(void);
extern lv_obj_t *ui_net;
extern lv_obj_t *ui_netpanel;
void ui_event_net(lv_event_t *e);
extern char *url;

// SCREEN:ui_camera
void ui_camera_screen_init(void);
extern lv_obj_t *ui_camera;
extern lv_obj_t *ui_panel_camera;
extern lv_obj_t *ui_camera_canvas;
void ui_event_camera(lv_event_t *e);

void ui_event____initial_actions0(lv_event_t *e);
extern lv_obj_t *ui____initial_actions0;

void ui_send_sys_event(lv_obj_t *obj, lv_event_code_t event_code, void *user_data);

LV_IMG_DECLARE(ui_img_clody_png);    // assets/clody.png
LV_IMG_DECLARE(ui_img_wifi_png);    // assets/wifi.png
LV_IMG_DECLARE(ui_img_battery_png);    // assets/battery.png
LV_IMG_DECLARE(ui_img_muyu_png);    // assets/muyu.png
LV_IMG_DECLARE(ui_img_wifi_disconnection_png);   // assets/ui_img_wifi_disconnection.png

LV_FONT_DECLARE(ui_font_ComfortaaBold75);
LV_FONT_DECLARE(ui_font_ComfortaaLight70);
LV_FONT_DECLARE(ui_font_OPPOSansH18);
LV_FONT_DECLARE(ui_font_OPPOSansH25);
LV_FONT_DECLARE(ui_font_OPPOSansL70);

typedef struct {
    lv_obj_t *page;
    char *name;
} ui_page_name_t;

extern ui_page_name_t ui_pages[7];

void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
